from flask import Flask, request, jsonify
from llm_utils import get_intent
from webex_utils import get_message_text, reply_to_user
from user_actions import check_user_status, resend_activation_email

app = Flask(__name__)

@app.route("/webhook", methods=["POST"])
def webhook():
    payload = request.json
    print("Received webhook:", payload)

    if payload.get("actorId") == payload.get("createdBy"):
        return jsonify({"status": "ignored"}), 200

    message_id = payload.get("data", {}).get("id")
    room_id = payload.get("data", {}).get("roomId")

    if not message_id or not room_id:
        return jsonify({"status": "invalid"}), 400

    # Get the full message text
    user_message = get_message_text(message_id)
    print("User message:", user_message)

    # Determine user intent
    intent = get_intent(user_message)
    print("Detected intent:", intent)

    # Execute intent
    if intent == "check_status":
        response = check_user_status(user_message)
    elif intent == "resend_activation":
        response = resend_activation_email(user_message)
    else:
        response = "ğŸ¤– I'm not sure how to help with that. Please ask about user status or activation."

    reply_to_user(room_id, response)
    return jsonify({"status": "ok"}), 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)

--------

def get_intent(message: str) -> str:
    message = message.lower()
    if "active" in message or "status" in message:
        return "check_status"
    elif "resend" in message or "activation" in message:
        return "resend_activation"
    else:
        return "unknown"


---------
import requests

WEBEX_BOT_TOKEN = "<YOUR_WEBEX_BOT_TOKEN>"

HEADERS = {
    "Authorization": f"Bearer {WEBEX_BOT_TOKEN}",
    "Content-Type": "application/json"
}

def get_message_text(message_id: str) -> str:
    url = f"https://webexapis.com/v1/messages/{message_id}"
    response = requests.get(url, headers=HEADERS)
    if response.status_code == 200:
        return response.json().get("text", "")
    return ""

def reply_to_user(room_id: str, message: str):
    url = "https://webexapis.com/v1/messages"
    payload = {
        "roomId": room_id,
        "text": message
    }
    requests.post(url, json=payload, headers=HEADERS)

--------------
def check_user_status(message: str) -> str:
    # Simulated logic
    return "âœ… The user is currently active."

def resend_activation_email(message: str) -> str:
    # Simulated logic
    return "ğŸ“§ Activation email has been resent to the user."



import React, { useState } from "react";
import { Chat, Message, User } from "@progress/kendo-react-conversational-ui";
import { Grid, GridColumn } from "@progress/kendo-react-grid";

interface ChatMessage {
  author: User;
  text: string;
}

const user: User = { id: 1, name: "User" };
const bot: User = { id: 2, name: "Formulary AI Bot" };

const FormularyChat: React.FC = () => {
  const [messages, setMessages] = useState<ChatMessage[]>([]);
  const [results, setResults] = useState<any[]>([]);

  const sendMessage = async (event: any) => {
    const userMessage: ChatMessage = { author: user, text: event.message.text };
    setMessages((prev) => [...prev, userMessage]);

    try {
      const response = await fetch("http://localhost:8000/ask", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ query: event.message.text }),
      });

      const data = await response.json();

      if (data.results) {
        setResults(data.results);
        const botMessage: ChatMessage = { author: bot, text: "Here are your search results:" };
        setMessages((prev) => [...prev, botMessage]);
      } else if (data.response) {
        const botMessage: ChatMessage = { author: bot, text: data.response };
        setMessages((prev) => [...prev, botMessage]);
      } else {
        const botMessage: ChatMessage = { author: bot, text: "Sorry, I didn't understand your query." };
        setMessages((prev) => [...prev, botMessage]);
      }
    } catch (error) {
      console.error("Error:", error);
      const botMessage: ChatMessage = { author: bot, text: "An error occurred. Please try again later." };
      setMessages((prev) => [...prev, botMessage]);
    }
  };

  return (
    <div style={{ width: "600px", margin: "auto", padding: "20px" }}>
      <h2>Formulary AI Chat</h2>
      <Chat messages={messages} onMessageSend={sendMessage} user={user} placeholder="Ask about formulary..." />

      {results.length > 0 && (
        <div style={{ marginTop: "20px" }}>
          <h3>Search Results</h3>
          <Grid data={results}>
            <GridColumn field="id" title="ID" width="100px" />
            <GridColumn field="formulary_name" title="Formulary Name" width="200px" />
            <GridColumn field="wac_amount" title="WAC Amount" width="150px" />
          </Grid>
        </div>
      )}
    </div>
  );
};

export default FormularyChat;



npm install @progress/kendo-react-conversational-ui @progress/kendo-react-grid @progress/kendo-react-buttons @progress/kendo-react-inputs
